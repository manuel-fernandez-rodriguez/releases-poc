# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Registerly

on:
  push:
    branches: [ "main" ]
    paths: [ "Registerly/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Registerly/**" ]
  workflow_dispatch:

env:
  PROJECT: Registerly

jobs:
  build:

    runs-on: ubuntu-latest
    concurrency: Release
    permissions: 
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build
      run: |
         chmod +x ./${{ env.PROJECT }}/build.sh
         cd ./${{ env.PROJECT }}/
         ./build.sh
      shell: bash
    - name: Get version
      id: get-version
      uses: kzrnm/get-net-sdk-project-versions-action@v2
      with:
        proj-path: ./${{ env.PROJECT }}/src/DeviantCoding.${{ env.PROJECT }}.csproj
    - name: Create or update release
      env:  
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.PROJECT }}-${{ steps.get-version.outputs.version }}
        title: ${{ env.PROJECT }} v${{ steps.get-version.outputs.version }}
      run: |
    
        TEST_VAR="$(ls)"
        echo "TEST_VAR=$TEST_VAR"

        ALL_RELEASES="$(gh release list --json name,tagName,isDraft --jq '.[] | select(.tagName=="$tag" and .isDraft)')"
        echo "ALL_RELEASES=$ALL_RELEASES"

        RELEASE_NAME="$(gh release list --json name,tagName,isDraft --jq '.[] | select(.tagName=="$tag" and .isDraft)|.name')"
        echo "RELEASE_NAME=$RELEASE_NAME"
        if [ -z "${RELEASE_NAME}" ]
        then
          echo "Creating new release $tag"
          gh release create "$tag" ./${{ env.PROJECT }}/src/bin/Release/*.nupkg --draft --prerelease --title "$title"
        else
          echo "Updating existing release $tag"
          gh release upload "$tag" ./${{ env.PROJECT }}/src/bin/Release/*.nupkg --clobber
        fi
      shell: bash

      
