# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Registerly

on:
  push:
    branches: [ "main" ]
    paths: [ "Registerly/**" ]
  pull_request:
    branches: [ "main" ]
    paths: [ "Registerly/**" ]
  workflow_dispatch:

env:
  PROJECT: Registerly

jobs:
  build:

    runs-on: ubuntu-latest
    concurrency: Registerly
    permissions: 
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Build
      run: |
         chmod +x ./$PROJECT/build.sh
         cd ./$PROJECT/
         ./build.sh
      shell: bash
    - name: Get version
      id: get-version
      uses: kzrnm/get-net-sdk-project-versions-action@v2
      with:
        proj-path: ./$PROJECT/src/DeviantCoding.$PROJECT.csproj
    - name: Create or update release
      env:  
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ PROJECT }} ${{ steps.get-version.outputs.version }}
      run: |
        RELEASE_NAME="$(gh release list --json name,tagName,isDraft --jq '.[] | select(.tagName=="$tag" and .isDraft)|.name')"
        if [ "$RELEASE_NAME" == "" ]
        then
          echo "Creating new release"
          gh release create "$tag" ./Registerly/src/bin/Release/*.nupkg --generate-notes --draft --prerelease --title "Registerly v$tag"
        else
          echo "Updating existing release"
          gh release upload "$tag" ./Registerly/src/bin/Release/*.nupkg --clobber
        fi
      shell: bash

      
